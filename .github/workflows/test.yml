name: CI with SonarQube (Azure VM) & Snyk

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  analysis:
    runs-on: ubuntu-latest

    steps:
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install Dependencies (Frontend)
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install
          npm install --save-dev typescript@latest

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm install

      # ---- SonarQube Analysis (Frontend) ----
      - name: SonarQube Scan Frontend (Azure VM)
        uses: sonarsource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=wonderlust-frontend
            -Dsonar.typescript.tsconfigPath=frontend/tsconfig.sonar.json

      # ---- SonarQube Analysis (Backend) ----
      - name: SonarQube Scan Backend (Azure VM)
        uses: sonarsource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=wonderlust-backend
            -Dsonar.sources=backend

      # ---- Wait & Check Quality Gate ----
      - name: SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


      # ---- Build Frontend Artifact ----
      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Upload Frontend Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

      # ---- Build Backend Artifact ----
      - name: Build Backend
        run: |
          cd backend
          npm install
          npm run build

      - name: Upload Backend Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: backend/dist
